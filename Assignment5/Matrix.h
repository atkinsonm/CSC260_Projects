// Name: Michael Meluso
// Course: CSC 260, Section 01
// Semester: Spring 2013
// Instructor: Dr. Pulimood
// Assignment 6
// Description: 
// Filename: Matrix.h
// Last modified on: 4/29/2013

#include <fstream>
#include <iostream>
#include "Complex.h"

using namespace std;

class Matrix 
{
	private:
		int rows; //Default number of rows
		int columns; //Default number of columns
		Complex matrix[10][15];
		
	public:
		Matrix(); //Default constructor
		Matrix(int, int); //Matrix constructor given number of rows and columns
		
		//Input for Matrix by overloading >> operator
		friend istream& operator>> (istream&, Matrix&);
		
		Matrix operator+ (Matrix&); //Matrix plus Matrix
		Matrix operator+ (Complex&); //Matrix plus Complex
		
		Matrix& operator= (const Matrix&); 
		Matrix& operator= (Complex&);
		
		//Multiplication between 2 matrices
		Matrix operator* (Matrix&);
		
		//Multiplication between Matrix and Complex defined as Matrix made up of Complexes generated by real*real and imag*imag
		Matrix operator* (Complex&);
		
		//Output for Matrix by overloading << operator
		friend ostream& operator<< (ostream&, const Matrix&);
};